#+TITLE: newm developer information

* Current (v0.3)
** TODO NixOS greetd deployment
** TODO FocusBorder (possibly SSD as well) shows up before newm closes

** Improvements
*** STRT Bring down idle CPU - Appears to be related to python gestures (possibly PyEvdevGestureProvider.update, plus lots of unnecessary threads?) and polling c<-py (20Hz)
*** TODO Switch to last focused window (i.e. make switching between two windows via one shortcut possible)
*** TODO Scale windows moving others "out of the way"

** Gestures 
*** STRT Configurable to some extent - i.e. enable / disable certain behaviours, exchange 3- / 4- / 5-finger-swipes
*** DONE C gestures: Configurability

** Improved panel
*** DONE Complete default keybindings for sound and kbdlight
*** Panel implementation in view
**** TODO Get rid of newm-panel-nwjs (in documentation)
**** TODO Unify layer_panel and panel
**** TODO Possibility to start waybar as a panel (i.e. with auto restart)
**** TODO Drop panel == "notifier" --> wob and mako are the better solution
*** TODO Incorporate and update default config accordingly
    - [ ] catapult
    - [ ] rofi
    - [X] wob
    - [X] mako

* Backlog
** dbus endpoint for waybar etc
** Support swaylock
** Don't have double padding between windows
** Layer shell - Exclusive zones and keyboard interactivity
** Video on newm-sidecar
** Titles during Overview
** More detailed config on Layout class
** Ability to increase size of rows or cols (e.g. in 1x2 | 1x2)
** Ultrawide monitors --> two workspaces on one output
** Move to resize overlay: Trigger size changes on invisible windows only in finish transition? Analogous to interpolate
** Move tiles from workspace to another -> animate size change instead of jump
** Allow certain overlays to start during animations (e.g. 3/4-Finger-Swipe during animation one view)
** Autoplace the first couple of windows more like i3 (i.e. resizing existing windows / tiling)
** Dynamic background
** Possible and sensible to use a decorater for layout methods where reducer is defined and then an animation is started?


* Setup clean arch chroot / qemu for testing
** Setup chroot

Following https://www.collabora.com/news-and-blog/blog/2019/03/20/bootstraping-a-minimal-arch-linux-image/

#+BEGIN_SRC sh
truncate -s 20G arch_disk.raw
mkfs.ext4 arch_disk.raw
mkdir mnt
sudo mount arch_disk.raw mnt
sudo pacstrap mnt base base-devel linux linux-firmware
sudo arch-chroot mnt
#+END_SRC

Now we are inside the chroot, very basic setup:

#+BEGIN_SRC sh
passwd
pacman -S dhcpcd

useradd --create-home test
passwd test
usermod -aG wheel test
vim /etc/sudoers # add wheel
su test
#+END_SRC

Finally clean up

#+BEGIN_SRC sh
exit
sudo umount mnt
#+END_SRC

** Setup virtual machine

To use the disk in a virtual machine (not incredibly nice...)

#+BEGIN_SRC sh
sudo mount arch_disk.raw mnt
cp -r mnt/boot mnt_boot
sudo umount mnt
#+END_SRC

and start using

#+BEGIN_SRC sh
qemu-system-x86_64 --enable-kvm -hda arch_disk.raw -m 4G -kernel mnt_boot/vmlinuz-linux -initrd mnt_boot/initramfs-linux[-fallback].img -append "root=/dev/sda rw" -vga virtio
#+END_SRC

To enable internet access, probably

#+BEGIN_SRC sh
systemctl enable dhcpcd
systemctl start dhcpcd
#+END_SRC

is necessary
