#+TITLE: newm developer information

* Current (v0.2)
** Bugs / Technical debt
*** DONE Rounding errors on workspace setup
*** KILL Cmd-W no longer works
*** DONE Jumpy transition between workspaces (MoveResizeOverlay) - possibly only after change workspace sizes
*** DONE Try a little harder to force size on windows (e.g. Firefox > Save As)
*** TODO Move newly floating windows inside extent
*** TODO Bug: Move floating window to other screen, change to tiled
*** DONE Bug: Open Firefox on a 2x2 tile fullscreen, on every popup focus is moved back
*** DONE Background issues on overlapping outputs
*** DONE TODO: Extent on move_resize_overlay --> jumpy background
*** DONE Misplaced popups
*** TODO On no-anim screens wl_surface.enter(output) is not necessarily sent (see alacritty)

** DONE If width is not divisible by 3, 3x3 grid produces a lot of "Potential scaling issue"... Only false positive? In that case optimize the warning
** TODO Regularly remove orphaned view states
** DONE Configurable: Set floating windows to chosen size or smallest possible
** TODO Stacked windows are not scaled properly
** DONE Proper handling of mask for floating views --> Keep shadows of Firefox > Save As, keep rounded corners on alacritty
** DONE Layer shell

** Backgrounds
*** DONE Background should (if res is sufficient) never be scaled up, no matter how many windows, movements and scaling effects should instead become smaller
*** DONE Backgrounds when moving window between workspaces (issue with move_origin) / switching windows from tiled to floating
*** STRT Open second screen, overview -> Hacky background animation (sth to do with scaling and pywm.round)
*** DONE Respect no_anim outputs
*** DONE Configurable time scale
*** STRT Configurable w0, h0 and per output background
*** DONE Hacky on enter overlay

** Multi-output support
*** TODO Overview per output

** TODO Interpolation: Trigger size updates on view outside of workspace after anim has finished - this should make fullscreen enter-leave animations in situations with lots of windows a bit smoother
** TODO Move to resize overlay: Trigger size changes on invisible windows only in finish transition

** TODO Test DBeaver
** TODO Test a game
** TODO Possibly: Enable CSD for floating windows?

** Release
- [ ] TESTS: Move here from pywm / compare with weston, where things don't work on sway
- [ ] TODO comments
- [ ] Document newm-cmd open/close-virtual-output - link to newm-sidecar
- [ ] Document new config options


* v0.3
** Layer shell - Exclusive zones and keyboard interactivity
** Scale windows moving others "out of the way"
** Ultrawide monitors --> tow workspaces on one output
** Improved panel
- Useful handling of multiple workspaces
- Bars as panels not as widgets
- layer-shell for bars and possibly more?
- catapult
- Possibly flutter-based?
- Drop websockets and with that newm-panel-nwjs but keep newm_panel_basic

** Widgets
- Animated border around current window
- Titles during OverviewOverlay

* Backlog / Ideas
** Dynamic background
** Move tiles from workspace to another -> animate size change instead of jump
** Allow certain overlays to start during animations (e.g. 3/4-Finger-Swipe during animation one view)
** Autoplace the first couple of windows more like i3 (i.e. resizing existing windows / tiling)


* Setup clean arch chroot / qemu for testing

** Setup chroot

Following https://www.collabora.com/news-and-blog/blog/2019/03/20/bootstraping-a-minimal-arch-linux-image/

#+BEGIN_SRC sh
truncate -s 20G arch_disk.raw
mkfs.ext4 arch_disk.raw
mkdir mnt
sudo mount arch_disk.raw mnt
sudo pacstrap mnt base base-devel linux linux-firmware
sudo arch-chroot mnt
#+END_SRC

Now we are inside the chroot, very basic setup:

#+BEGIN_SRC sh
passwd
pacman -S dhcpcd

useradd --create-home test
passwd test
usermod -aG wheel test
vim /etc/sudoers # add wheel
su test
#+END_SRC

Finally clean up

#+BEGIN_SRC sh
exit
sudo umount mnt
#+END_SRC

** Setup virtual machine

To use the disk in a virtual machine (not incredibly nice...)

#+BEGIN_SRC sh
sudo mount arch_disk.raw mnt
cp -r mnt/boot mnt_boot
sudo umount mnt
#+END_SRC

and start using

#+BEGIN_SRC sh
qemu-system-x86_64 --enable-kvm -hda arch_disk.raw -m 4G -kernel mnt_boot/vmlinuz-linux -initrd mnt_boot/initramfs-linux[-fallback].img -append "root=/dev/sda rw" -vga virtio
#+END_SRC

To enable internet access, probably

#+BEGIN_SRC sh
systemctl enable dhcpcd
systemctl start dhcpcd
#+END_SRC

is necessary
